version: 2.0

# Define images

## Python 3.6
py36default: &py36default
  docker:
    - image: circleci/python:3.6
  steps:
   - setup_remote_docker:
       docker_layer_caching: false
   - checkout
   - attach_workspace:
       at: /tmp/images
   - run: docker load -i /tmp/images/py36.tar || true
   - run: docker run py36 tox -e $CIRCLE_STAGE

py36_requires: &py36_requires
  requires:
    - py36_base

## Python 3.7
py37default: &py37default
   docker:
     - image: circleci/python:3.7
   steps:
    - setup_remote_docker:
        docker_layer_caching: false
    - checkout
    - attach_workspace:
        at: /tmp/images
    - run: docker load -i /tmp/images/py37.tar || true
    - run: docker run py37 tox -e $CIRCLE_STAGE

py37_requires: &py37_requires
  requires:
    - py37_base

## Python 3.8
py38default: &py38default
   docker:
     - image: circleci/python:3.8
   steps:
    - setup_remote_docker:
        docker_layer_caching: false
    - checkout
    - attach_workspace:
        at: /tmp/images
    - run: docker load -i /tmp/images/py38.tar || true
    - run: docker run py38 tox -e $CIRCLE_STAGE

py38_requires: &py38_requires
  requires:
    - py38_base

## Python 3.9
py39default: &py39default
   docker:
     - image: circleci/python:3.9
   steps:
    - setup_remote_docker:
        docker_layer_caching: false
    - checkout
    - attach_workspace:
        at: /tmp/images
    - run: docker load -i /tmp/images/py39.tar || true
    - run: docker run py39 tox -e $CIRCLE_STAGE

py39_requires: &py39_requires
  requires:
    - py39_base

# Define the jobs to run

jobs:
  py36_base:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run: docker build -f .circleci/Dockerfile --build-arg PYTHON_VERSION=3.6 -t py36 .
      - run: mkdir images
      - run: docker save -o images/py36.tar py36
      - persist_to_workspace:
         root: images
         paths: py36.tar
  py37_base:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run: docker build -f .circleci/Dockerfile --build-arg PYTHON_VERSION=3.7 -t py37 .
      - run: mkdir images
      - run: docker save -o images/py37.tar py37
      - persist_to_workspace:
         root: images
         paths: py37.tar
  py38_base:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run: docker build -f .circleci/Dockerfile --build-arg PYTHON_VERSION=3.8 -t py38 .
      - run: mkdir images
      - run: docker save -o images/py38.tar py38
      - persist_to_workspace:
         root: images
         paths: py38.tar
  py39_base:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run: docker build -f .circleci/Dockerfile --build-arg PYTHON_VERSION=3.9 -t py39 .
      - run: mkdir images
      - run: docker save -o images/py39.tar py39
      - persist_to_workspace:
         root: images
         paths: py39.tar
  flake8:
    <<: *py36default
  isort:
    <<: *py36default

  py36-dj111-sqlite-cms40:
    <<: *py36default

  py36-dj20-sqlite-cms40:
    <<: *py36default
  py37-dj20-sqlite-cms40:
    <<: *py37default
  py37-dj20-sqlite-cms40-versioning:
    <<: *py37default
  py38-dj20-sqlite-cms40:
    <<: *py38default
  py38-dj20-sqlite-cms40-versioning:
    <<: *py38default

  py36-dj21-sqlite-cms40:
    <<: *py36default
  py37-dj21-sqlite-cms40:
    <<: *py37default
  py37-dj21-sqlite-cms40-versioning:
    <<: *py37default
  py38-dj21-sqlite-cms40:
    <<: *py38default
  py38-dj21-sqlite-cms40-versioning:
    <<: *py38default

  py36-dj22-sqlite-cms40:
    <<: *py36default
  py37-dj22-sqlite-cms40:
    <<: *py37default
  py37-dj22-sqlite-cms40-versioning:
    <<: *py37default
  py38-dj22-sqlite-cms40:
    <<: *py38default
  py38-dj22-sqlite-cms40-versioning:
    <<: *py38default
  py39-dj22-sqlite-cms40:
    <<: *py39default
  py39-dj22-sqlite-cms40-versioning:
    <<: *py39default

# Define the sequence to run the jobs defined

workflows:
  version: 2
  build:
    jobs:
      - py36_base
      - py37_base
      - py38_base
      - py39_base
      - flake8:
          requires:
            - py36_base
      - isort:
          requires:
            - py36_base
      - py36-dj111-sqlite-cms40:
          requires:
            - py36_base

      - py36-dj20-sqlite-cms40:
          requires:
            - py36_base
      - py37-dj20-sqlite-cms40:
          requires:
            - py37_base
      - py37-dj20-sqlite-cms40-versioning:
          requires:
            - py37_base
      - py38-dj20-sqlite-cms40:
          requires:
            - py38_base
      - py38-dj20-sqlite-cms40-versioning:
          requires:
            - py38_base

      - py36-dj21-sqlite-cms40:
          requires:
            - py36_base
      - py37-dj21-sqlite-cms40:
         requires:
            - py37_base
      - py37-dj21-sqlite-cms40-versioning:
          requires:
            - py37_base
      - py38-dj21-sqlite-cms40:
         requires:
            - py38_base
      - py38-dj21-sqlite-cms40-versioning:
          requires:
            - py38_base

      - py36-dj22-sqlite-cms40:
          requires:
            - py36_base
      - py37-dj22-sqlite-cms40:
         requires:
            - py37_base
      - py37-dj22-sqlite-cms40-versioning:
          requires:
             - py37_base
      - py38-dj22-sqlite-cms40:
         requires:
            - py38_base
      - py38-dj22-sqlite-cms40-versioning:
          requires:
             - py38_base
      - py39-dj22-sqlite-cms40:
         requires:
            - py39_base
      - py39-dj22-sqlite-cms40-versioning:
          requires:
             - py39_base
